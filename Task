
import java.io.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.Charset;
import java.nio.file.*;
import java.nio.file.attribute.BasicFileAttributeView;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.*;
import java.util.zip.*;


//C:\Users\zhakypbekov_30855\Desktop\test1//Записи2.txt

class Task {

	 public static void main(String[] args) throws IOException {
		 	List<ZipEntry> list = new ArrayList<ZipEntry>();
		    List<byte[]> byteList = new ArrayList<byte[]>();
		    boolean isContain = false;
		    ZipEntry zipEntry;
		    int listEntryIndex = 0;
	        File file = new File("C:\\Users\\zhakypbekov_30855\\Desktop\\test1\\1.txt");
	        File zip  = new File("C:\\Users\\zhakypbekov_30855\\Desktop\\test1\\archive.zip");
	        
	        /**
	         * Извлечение из архива
	         */
	        ZipFile zipFile = new ZipFile(zip);
	        try(ZipInputStream zipInputStream = new ZipInputStream(Files.newInputStream(zip.toPath()), Charset.defaultCharset());){
	            while((zipEntry = zipInputStream.getNextEntry()) != null){
		        	list.add(zipEntry);
		        }
		        zipInputStream.closeEntry();
	        }
	        
	        for(ZipEntry e : list){
	        	try(InputStream in = zipFile.getInputStream(e);){
	        		byte[] bytes = new byte[in.available()];
			        in.read(bytes);
			        byteList.add(bytes);
	        	}
		    }
		    zipFile.close();

	        /**
	        Добавление в архив
	        */
	        try(ZipOutputStream zipOutStream = new ZipOutputStream(Files.newOutputStream(zip.toPath()));){
	        	for(ZipEntry e : list){
		        	if(e.toString().equals(file.getName())){
		        		isContain = true;
		        		break;
		        	}
		        	listEntryIndex++;
		        }
		        //Если 
		        if(isContain){
		        	zipEntry = new ZipEntry(file.getName());
		        	list.remove(listEntryIndex);
		        	byteList.remove(listEntryIndex);
		        } else{
		        	zipEntry = new ZipEntry("new/" + file.getName());
		        }
		        zipOutStream.putNextEntry(zipEntry);
		        Files.copy(file.toPath(), zipOutStream);
		        zipOutStream.closeEntry();
		        if(list.size() != 0){
		        	int index = 0;
			        while(true){
			        	if(index == byteList.size())
			        		break;
			        	zipOutStream.putNextEntry(list.get(index));
			        	zipOutStream.write(byteList.get(index));
			        	zipOutStream.closeEntry();	        	
			        	index++;
			        }
		        }
	        }
	 }
}

